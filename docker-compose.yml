# Virtual Context MCP Server - Docker Compose Configuration
version: '3.8'

services:
  # Main Virtual Context MCP Server
  virtual-context:
    build: 
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - "8000:8000"
    environment:
      # Database connection URLs
      - QDRANT_URL=http://qdrant:6333
      - NEO4J_URL=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=storypassword
      # SQLite data directory
      - SQLITE_DATA_DIR=/app/data
      # Logging configuration
      - LOG_LEVEL=INFO
      - PYTHONUNBUFFERED=1
    depends_on:
      qdrant:
        condition: service_healthy
      neo4j:
        condition: service_healthy
    volumes:
      # Persistent storage for SQLite and logs
      - ./data:/app/data
      # Configuration files
      - ./configs:/app/configs:ro
    networks:
      - virtual-context-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import virtual_context_mcp; print('OK')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:v1.7.4
    ports:
      - "6333:6333"
      - "6334:6334"  # gRPC port
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
      - QDRANT__LOG_LEVEL=INFO
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - virtual-context-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Neo4j Graph Database
  neo4j:
    image: neo4j:5.15
    ports:
      - "7474:7474"  # HTTP port
      - "7687:7687"  # Bolt port
    environment:
      - NEO4J_AUTH=neo4j/storypassword
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_security_procedures_allowlist=apoc.*
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
      - NEO4J_dbms_memory_heap_initial__size=512m
      - NEO4J_dbms_memory_heap_max__size=2G
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    networks:
      - virtual-context-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "storypassword", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Optional: Redis for caching (if needed in future)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - virtual-context-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    profiles:
      - redis  # Only start with --profile redis

# Named volumes for persistent data
volumes:
  qdrant_data:
    driver: local
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_import:
    driver: local
  neo4j_plugins:
    driver: local
  redis_data:
    driver: local

# Custom network for service discovery
networks:
  virtual-context-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16